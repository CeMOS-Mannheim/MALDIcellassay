"Ab42" = "AB 42",
"Ab43" = "AB 43")) %>%
ungroup() %>%
mutate(Substrate = factor(Substrate, levels = lvls_abc)) -> df
# Abeta profile plot ####
ggplot(df, aes(x = Substrate, y= norm, fill = Species)) +
geom_col(position = "stack") +
scale_fill_discrete(type = c("#0000FF", "#FF6000", "#00C000", "#AD07E3", "#808080")) + # pretty ugly...
theme_pubclean()+
theme(text = element_text(size = 20, face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top") +
labs(fill = "",
x = "",
y = expression(Ab[n]~ "as % total Ab")) -> prof_p
prof_p
df %>%
select(-mean) %>%
spread(Species, norm) -> df2
df3 <- df2
df2 %>%
gather(Species, norm, -Substrate) %>%
left_join(aoo %>%
select(Substrate, AOO_mean))-> df2
# Reordered abeta profile plot
df2$Substrate <- fct_reorder(df2$Substrate, (df2$AOO_mean))
levels(df2$Substrate)
df2 %>%
ggplot(aes(x = Substrate, y= norm, fill = Species)) + geom_col(position = "stack") +
theme_pubclean()+
theme(text = element_text(size = 16, face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top") +
labs(fill = "",
x = "",
y = expression(Ab[n]~ "as % total Ab"))
# pca ####
rownames(df3) <- df3$Substrate
df3 %>%
filter(!is.na(Ab43)) -> pca_df
prcomp(scale(pca_df[,-1])) -> pca
pca$rotation %>%
as_tibble(rownames = NA) %>%
rownames_to_column("Species") %>%
gather(PC, val, -Species) %>%
ggplot(aes(x = PC, y = val, fill = Species)) +
scale_fill_discrete(type = c("#0000FF", "#FF6000", "#00C000", "#AD07E3", "#808080")) + # pretty ugly...
geom_col(position = "dodge") +
scale_y_continuous(limits = c(-0.8, 0.8)) +
geom_hline(yintercept = 0) +
coord_flip() +
theme_pubr() +
theme(axis.title = element_text(size = 16, face = "bold"),
axis.text = element_text(size = 16, face = "bold"),
legend.title = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 12, face = "bold")) +
labs(x = "",
y = "PC loading") -> load_p
load_p
pca_df %>%
ungroup() %>%
left_join(aoo %>%
select(Substrate, AOO_mean),by = "Substrate") %>%
mutate(AOO_mean = ifelse(is.na(AOO_mean), NA, AOO_mean)) %>%
mutate(PC1 = pca$x[,1],
PC2 = pca$x[,2],
PC3 = pca$x[,3],
PC4 = pca$x[,4])-> pca_df2
ggplot_pca(pca, points_alpha = 0.01,
arrows_size = 1.3,
arrows_colour = "red",
labels_text_placement = 1.9,
arrows_textsize = 7) +
scale_x_continuous(limits = c(-3,3)) +
scale_y_continuous(limits = c(-3,3)) +
geom_point(aes(color = pca_df2$AOO_mean), alpha = 0.7, size = 5) +
scale_color_viridis_c() +
ggrepel::geom_text_repel(aes(label = pca_df2$Substrate),
size = 5,
force = 2,
segment.colour = "gray20",
min.segment.length = 0.5, max.overlaps = 20) +
theme_pubr() +
theme(axis.title = element_text(size = 16, face = "bold"),
legend.title = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 12, face = "bold")) +
labs(color = "AOO (years)") -> pca_p
pca_p
# multivariate fit of PC's and aoo ######
# linear fit of raw profile data
df3 %>%
left_join(aoo %>%
select(Substrate, AOO_mean),
by = "Substrate") %>%
filter(!is.na(Ab43),
!is.na(AOO_mean)) %>%
lm(AOO_mean~.-Substrate, data = .) -> fit
summary(fit)
PC1_2 <- pca_df2$PC1^2
PC2_2 <- pca_df2$PC2^2
# linear fit
pca_df2 %>%
lm(AOO_mean ~ PC1+PC2, .) -> pca_fit
summary(pca_fit)
# quadratic fit
pca_df2 %>%
lm(AOO_mean ~ PC1+PC2+PC2_2, .) -> pca_fit2
summary(pca_fit2)
# plot fit's in 3D ####
x <- seq(0, 70, by = 1)
y <- seq(20, 100, by = 1)
plane <- outer(x, y, function(a, b){pca_fit$coef[1] +
pca_fit$coef[2]*a + pca_fit$coef[3]*b})
plane2 <- outer(x, y, function(a, b){pca_fit2$coef[1] +
pca_fit2$coef[2]*a + pca_fit2$coef[3]*b + a^2*pca_fit2$coef[4]})
# 3D plot as profile data
pca_df2 %>%
mutate(Ab3738 = Ab37 + Ab38,
Ab43_class = ifelse(Ab43 > 0, 1, 2))%>%
filter(!is.na(AOO_mean)) -> pca_df_mod
pca2 <- prcomp(scale(pca_df_mod[,c(12,4,5)]))
pca_df3 <- pca_df_mod %>%
mutate(PC1 = pca2$x[,1],
PC2 = pca2$x[,2],
PC3 = pca2$x[,3])
pca_df3 %>%
lm(AOO_mean ~ PC1+PC2, .) -> pca_fit3
summary(pca_fit3)
pca_df_mod  %>%
lm(AOO_mean ~ Ab3738 + Ab40 , data = .) ->  profile_fit
pca_df_mod  %>%
lm(AOO_mean ~ Ab3738 + Ab40 , data = .) ->  profile_fit
summary(profile_fit)
axx <- list(
title = list(text = "A??37+A??38 [%]",
font = list(size = 36),
standoff = 40L),
nticks = 4,
tickfont = list(size = 18,
color = "darkgray")
)
axy <- list(
title = list(text = "A??40 [%]",
font = list(size = 36),
standoff = 40L),
nticks = 4,
tickfont = list(size = 18,
color = "darkgray")
)
axz <- list(
title = list(text = "AOO [yrs.]",
font = list(size = 36),
standoff = 40L),
nticks = 5,
tickfont = list(size = 18,
color = "darkgray")
)
# 3D plot quadratic fit
plot_ly(pca_df2, x = ~PC2, y = ~PC1, z = ~AOO_mean, color = ~AOO_mean, opacity = 1) %>%
add_markers(marker = list(size = 7),
text = ~Substrate,
hoverinfo = 'text') %>%
add_surface(x = ~x, y = ~y, z = ~plane2, opacity = 0.7)
# 3D plot quadratic fit
plot_ly(pca_df2, x = ~PC2, y = ~PC1, z = ~AOO_mean, color = ~AOO_mean, opacity = 1) %>%
add_markers(marker = list(size = 7),
text = ~Substrate,
hoverinfo = 'text')# %>%
ggplot_pca(pca, points_alpha = 0.01,
arrows_size = 1.3,
arrows_colour = "red",
labels_text_placement = 1.9,
arrows_textsize = 7) +
scale_x_continuous(limits = c(-3,3)) +
scale_y_continuous(limits = c(-3,3)) +
geom_point(aes(color = pca_df2$AOO_mean), alpha = 0.7, size = 5) +
scale_color_viridis_c() +
ggrepel::geom_text_repel(aes(label = pca_df2$Substrate),
size = 5,
force = 2,
segment.colour = "gray20",
min.segment.length = 0.5, max.overlaps = 20) +
theme_pubr() +
theme(axis.title = element_text(size = 16, face = "bold"),
legend.title = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 12, face = "bold"),
axis.line = element_blank()) +
labs(color = "AOO (years)") -> pca_p
pca_p
ggplot_pca(pca, points_alpha = 0.01,
arrows_size = 1.3,
arrows_colour = "red",
labels_text_placement = 1.9,
arrows_textsize = 7) +
scale_x_continuous(limits = c(-3,3)) +
scale_y_continuous(limits = c(-3,3)) +
geom_point(aes(color = pca_df2$AOO_mean), alpha = 0.7, size = 5) +
scale_color_viridis_c() +
ggrepel::geom_text_repel(aes(label = pca_df2$Substrate),
size = 5,
force = 2,
segment.colour = "gray20",
min.segment.length = 0.5, max.overlaps = 20) +
theme_pubr() +
theme(axis.title = element_text(size = 16, face = "bold"),
legend.title = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 12, face = "bold"),
axis.line = element_blank()) +
geom_hline(aes(yintercept = 0))
ggplot_pca(pca, points_alpha = 0.01,
arrows_size = 1.3,
arrows_colour = "red",
labels_text_placement = 1.9,
arrows_textsize = 7) +
scale_x_continuous(limits = c(-3,3)) +
scale_y_continuous(limits = c(-3,3)) +
geom_point(aes(color = pca_df2$AOO_mean), alpha = 0.7, size = 5) +
scale_color_viridis_c() +
ggrepel::geom_text_repel(aes(label = pca_df2$Substrate),
size = 5,
force = 2,
segment.colour = "gray20",
min.segment.length = 0.5, max.overlaps = 20) +
theme_pubr() +
theme(axis.title = element_text(size = 16, face = "bold"),
legend.title = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 12, face = "bold"),
axis.line = element_blank()) +
geom_hline(aes(yintercept = 0), linetype = "dotted") +
labs(color = "AOO (years)") -> pca_p
pca_p
ggplot_pca(pca, points_alpha = 0.01,
arrows_size = 1.3,
arrows_colour = "red",
labels_text_placement = 1.9,
arrows_textsize = 7) +
scale_x_continuous(limits = c(-3,3)) +
scale_y_continuous(limits = c(-3,3)) +
geom_point(aes(color = pca_df2$AOO_mean), alpha = 0.7, size = 5) +
scale_color_viridis_c() +
ggrepel::geom_text_repel(aes(label = pca_df2$Substrate),
size = 5,
force = 2,
segment.colour = "gray20",
min.segment.length = 0.5, max.overlaps = 20) +
theme_pubr() +
theme(axis.title = element_text(size = 16, face = "bold"),
legend.title = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 12, face = "bold"),
axis.line = element_blank()) +
geom_hline(aes(yintercept = 0), linetype = "dotted") +
geom_vline(aes(xintercept = 0), linetype = "dotted") +
labs(color = "AOO (years)") -> pca_p
pca_p
pca
pca_df2
ggplot_pca(pca, points_alpha = 0.01,
arrows_size = 1.3,
arrows_colour = "red",
labels_text_placement = 1.9,
arrows_textsize = 7) +
scale_x_continuous(limits = c(-3,3)) +
scale_y_continuous(limits = c(-3,3)) +
geom_point(aes(color = pca_df2$AOO_mean %>% filter(!Substrate == "WT")), alpha = 0.7, size = 5) +
scale_color_viridis_c() +
ggrepel::geom_text_repel(aes(label = pca_df2$Substrate),
size = 5,
force = 2,
segment.colour = "gray20",
min.segment.length = 0.5, max.overlaps = 20) +
theme_pubr() +
theme(axis.title = element_text(size = 16, face = "bold"),
legend.title = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 12, face = "bold"),
axis.line = element_blank()) +
geom_hline(aes(yintercept = 0), linetype = "dotted") +
geom_vline(aes(xintercept = 0), linetype = "dotted") +
labs(color = "AOO (years)") -> pca_p
pca_p
ggplot_pca(pca, points_alpha = 0.01,
arrows_size = 1.3,
arrows_colour = "red",
labels_text_placement = 1.9,
arrows_textsize = 7) +
scale_x_continuous(limits = c(-3,3)) +
scale_y_continuous(limits = c(-3,3)) +
geom_point(aes(color = pca_df2$AOO_mean[which(!is.na(pca_df2$AOO_mean))]), alpha = 0.7, size = 5) +
scale_color_viridis_c() +
ggrepel::geom_text_repel(aes(label = pca_df2$Substrate),
size = 5,
force = 2,
segment.colour = "gray20",
min.segment.length = 0.5, max.overlaps = 20) +
theme_pubr() +
theme(axis.title = element_text(size = 16, face = "bold"),
legend.title = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 12, face = "bold"),
axis.line = element_blank()) +
geom_hline(aes(yintercept = 0), linetype = "dotted") +
geom_vline(aes(xintercept = 0), linetype = "dotted") +
labs(color = "AOO (years)") -> pca_p
pca_p
df3
df3 %>%
filter(!is.na(Ab43),
!Substrate %in% c("WT", "R35Q", "E318G")) -> pca_df
prcomp(scale(pca_df[,-1])) -> pca
pca$rotation %>%
as_tibble(rownames = NA) %>%
rownames_to_column("Species") %>%
gather(PC, val, -Species) %>%
ggplot(aes(x = PC, y = val, fill = Species)) +
scale_fill_discrete(type = c("#0000FF", "#FF6000", "#00C000", "#AD07E3", "#808080")) + # pretty ugly...
geom_col(position = "dodge") +
scale_y_continuous(limits = c(-0.8, 0.8)) +
geom_hline(yintercept = 0) +
coord_flip() +
theme_pubr() +
theme(axis.title = element_text(size = 16, face = "bold"),
axis.text = element_text(size = 16, face = "bold"),
legend.title = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 12, face = "bold")) +
labs(x = "",
y = "PC loading") -> load_p
load_p
pca_df %>%
ungroup() %>%
left_join(aoo %>%
select(Substrate, AOO_mean),by = "Substrate") %>%
mutate(AOO_mean = ifelse(is.na(AOO_mean), NA, AOO_mean)) %>%
mutate(PC1 = pca$x[,1],
PC2 = pca$x[,2],
PC3 = pca$x[,3],
PC4 = pca$x[,4])-> pca_df2
ggplot_pca(pca, points_alpha = 0.01,
arrows_size = 1.3,
arrows_colour = "red",
labels_text_placement = 1.9,
arrows_textsize = 7) +
scale_x_continuous(limits = c(-3,3)) +
scale_y_continuous(limits = c(-3,3)) +
geom_point(aes(color = pca_df2$AOO_mean), alpha = 0.7, size = 5) +
scale_color_viridis_c() +
ggrepel::geom_text_repel(aes(label = pca_df2$Substrate),
size = 5,
force = 2,
segment.colour = "gray20",
min.segment.length = 0.5, max.overlaps = 20) +
theme_pubr() +
theme(axis.title = element_text(size = 16, face = "bold"),
legend.title = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 12, face = "bold"),
axis.line = element_blank()) +
geom_hline(aes(yintercept = 0), linetype = "dotted") +
geom_vline(aes(xintercept = 0), linetype = "dotted") +
labs(color = "AOO (years)") -> pca_p
pca_p
View(pca)
df3 %>%
filter(!is.na(Ab43)) -> pca_df
prcomp(scale(pca_df[,-1])) -> pca
pca$rotation %>%
as_tibble(rownames = NA) %>%
rownames_to_column("Species") %>%
gather(PC, val, -Species) %>%
ggplot(aes(x = PC, y = val, fill = Species)) +
scale_fill_discrete(type = c("#0000FF", "#FF6000", "#00C000", "#AD07E3", "#808080")) + # pretty ugly...
geom_col(position = "dodge") +
scale_y_continuous(limits = c(-0.8, 0.8)) +
geom_hline(yintercept = 0) +
coord_flip() +
theme_pubr() +
theme(axis.title = element_text(size = 16, face = "bold"),
axis.text = element_text(size = 16, face = "bold"),
legend.title = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 12, face = "bold")) +
labs(x = "",
y = "PC loading") -> load_p
load_p
pca_df %>%
ungroup() %>%
left_join(aoo %>%
select(Substrate, AOO_mean),by = "Substrate") %>%
mutate(AOO_mean = ifelse(is.na(AOO_mean), NA, AOO_mean)) %>%
mutate(PC1 = pca$x[,1],
PC2 = pca$x[,2],
PC3 = pca$x[,3],
PC4 = pca$x[,4])-> pca_df2
ggplot_pca(pca, points_alpha = 0.01,
arrows_size = 1.3,
arrows_colour = "red",
labels_text_placement = 1.9,
arrows_textsize = 7) +
scale_x_continuous(limits = c(-3,3)) +
scale_y_continuous(limits = c(-3,3)) +
geom_point(aes(color = pca_df2$AOO_mean), alpha = 0.7, size = 5) +
scale_color_viridis_c() +
ggrepel::geom_text_repel(aes(label = pca_df2$Substrate),
size = 5,
force = 2,
segment.colour = "gray20",
min.segment.length = 0.5, max.overlaps = 20) +
theme_pubr() +
theme(axis.title = element_text(size = 16, face = "bold"),
legend.title = element_text(size = 16, face = "bold"),
legend.text = element_text(size = 12, face = "bold"),
axis.line = element_blank()) +
geom_hline(aes(yintercept = 0), linetype = "dotted") +
geom_vline(aes(xintercept = 0), linetype = "dotted") +
labs(color = "AOO (years)") -> pca_p
pca_p
ggsave(filename = "Fig3_PCA.png", dpi = 600, width = 9, height = 6, plot = pca_p)
library(MALDIcellassay)
library(MALDIcellassay)
knitr::opts_chunk$set(fig.width=8,
fig.height=4,
collapse = TRUE,
comment = "#>"
)
library(MALDIcellassay)
data("spec")
concLog <- log10(unique(conc))
fitCurve(spec = spec,
dir = getwd(),
conc = conc,
saveIntensityMatrix = TRUE,
SinglePointRecal = TRUE,
normMz = 760.585,
alignTol = 500,
normTol = 100,
markValue= log10(0.5))
conc <- as.numeric(names(spec))
spec_prc <- MALDIquant::removeBaseline(spec)
avg <- MALDIquant::averageMassSpectra(spec_prc, labels = conc)
MALDIquant::plot(avg[[1]], main = "Overview of mean spectra", xlim = c(755, 765))
for(i in 2:length(avg)) {
MALDIquant::lines(avg[[i]], col = i)
}
legend("topright", legend = paste0(names(avg), "uM"), col = 1:8, lty=1)
concLog <- log10(unique(conc))
if(any(concLog == -Inf)) {
concLog[which(concLog == -Inf)] <- (min(concLog[which(!concLog == -Inf)])-1)
}
resp <- nplr::convertToProp(y = intmat[,10])
fitCurve(spec = spec,
dir = getwd(),
conc = conc,
saveIntensityMatrix = TRUE,
SinglePointRecal = TRUE,
normMz = 760.585,
alignTol = 500,
normTol = 100,
markValue= log10(0.5))
devtools::document()
library(MALDIcellassay)
head(1:100)
v <- 0.1
switch (v,
is.numeric = {quantile(1:100, v)}
)
switch (v,
is.numeric = {x = quantile(1:100, v)}
)
switch (v,
is.numeric = {x = quantile(1:100, v)}
)
switch (v,
is.numeric(v) = {x = quantile(1:100, v)}
)
library(MALDIcellassay)
devtools::document()
library(MALDIcellassay)
source("Y:/17-Thomas Enzlein/R/Alex_SpecExport/Alex_FitCurve.R", echo=TRUE)
devtools::document()
library(MALDIcellassay)
library(MALDIquant)
# fit curves
fitCurve(spec = spec_fil,
conc = names(spec_fil),
dir = dir,
SNR = SNR,
normMeth = normMeth, normMz = normMz, normTol = normTol,
alignTol = alignTol, binTol = binTol,
markValue = externalIC50,
fc_thresh = fc_thresh)
devtools::document()
# fit curves
fitCurve(spec = spec_fil,
conc = names(spec_fil),
dir = dir,
SNR = SNR,
normMeth = normMeth, normMz = normMz, normTol = normTol,
alignTol = alignTol, binTol = binTol,
markValue = externalIC50,
fc_thresh = fc_thresh)
devtools::install_github("CeMOS-Mannheim/MALDIcellassay")
devtools::document()
install.packages("svMisc")
devtools::document()
usethis::git_credentials()
usethis::use_git_config(user.name = "Thomas-enzlein", user.email = "t.enzlein@hs-mannheim.de")
usethis::create_github_token()
usethis::browse_github_token()
install.packages("credentials")
credentials::set_github_pat("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")
credentials::set_github_pat()
usethis::git_sitrep()
credentials::set_github_pat()
usethis::edit_r_environ()
usethis::git_sitrep()
usethis::use_git_config(user.name = "thomas-enzlein", user.email = "t.enzlein@hs-mannheim.de")
credentials::set_github_pat()
